[transmogrifier]
pipeline =
    sourcedirectory
    xmlprocessor
    path-update
    folderarchive
    foldertitle
    excludefromnav
    atimage
    constructor
    schemaupdater-atct
    state-inserter
    workflowupdater

[sourcedirectory]
blueprint = transmogrify.nitf.import.sourcedirectory
directory = transmogrify.nitf:data
suffix = xml

[xmlprocessor]
blueprint = transmogrify.nitf.xmlsource.xmlprocessor
directory = transmogrify.nitf:data/images

[path-update]
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
value = python:"/articulos/{0}/{1}".format(item['effective'].strftime("%Y/%M/%d"), item['_path'])
condition = python: item['_type'] in ['collective.nitf.content', 'Image']

[folderarchive]
blueprint = collective.transmogrifier.sections.folders

[foldertitle]
blueprint = collective.transmogrifier.sections.inserter
key = string:title
value = python:item['_path'].split('/')[-1]
condition = python: item['_type']=='Folder'

[excludefromnav]
blueprint = collective.transmogrifier.sections.inserter
key = string:excludeFromNav
value = python:True
condition = python: item['_type']=='Folder'

[atimage]
blueprint = plone.app.transmogrifier.mimeencapsulator
field = string:image
mimetype = python: item['_mimetype']
condition = python: item['_type']=='Image'
# wget -nc -x -i ~/Desktop/images.list

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[schemaupdater-dexterity]
blueprint = transmogrify.dexterity.schemaupdater

[schemaupdater-atct]
blueprint = plone.app.transmogrifier.atschemaupdater

[state-inserter]
blueprint = collective.transmogrifier.sections.inserter
key = string:_transitions
value = string:publish

[workflowupdater]
blueprint = plone.app.transmogrifier.workflowupdater

[logger_title]
blueprint = collective.transmogrifier.sections.logger
name = logger_title
level = INFO
key = title

[logger_type]
blueprint = collective.transmogrifier.sections.logger
name = logger_type
level = INFO
key = _type
